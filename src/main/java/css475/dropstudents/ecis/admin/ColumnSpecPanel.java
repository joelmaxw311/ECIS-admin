/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package css475.dropstudents.ecis.admin;

import css475.dropstudents.ecis.MySqlConnection;
import java.awt.BorderLayout;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.LayoutManager;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.Objects;
import java.util.function.Supplier;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.BoxLayout;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JSpinner;
import javax.swing.JTextField;
import javax.swing.SpinnerModel;
import javax.swing.SpinnerNumberModel;

/**
 *
 * @author joelm
 */
public class ColumnSpecPanel extends javax.swing.JPanel {

    private MySqlConnection.Database db;
    public final ColumnSpec spec;
    
    private Supplier<String> valueSupplier;
    
    /**
     * Creates new form ColumnSpecPanel
     */
    public ColumnSpecPanel(MySqlConnection.Database db, ColumnSpec spec) {
        this.db = db;
        this.spec = spec;
        initComponents();
        nameLabel.setText(spec.name + (spec.isRequired ? "*" : ""));
        Component input = makeInput(spec);
        inputContainer.add(input);
        
        //inputContainer.getLayout().addLayoutComponent(BorderLayout.CENTER, input);
    }
    
    Component makeInput(ColumnSpec spec) {
        switch (spec.type) {
            case Text: {
                JTextField field = new JTextField();
                this.valueSupplier = () -> field.getText().isEmpty() ? null : field.getText();
                return field;
            }
            case Int: {
                SpinnerModel model = new SpinnerNumberModel(0, Integer.MIN_VALUE, Integer.MAX_VALUE, 1);
                JSpinner field = new JSpinner(model);
                this.valueSupplier = () -> Objects.toString(field.getValue());
                return field;
            }
            case Real: {
                SpinnerModel model = new SpinnerNumberModel(0.0, Double.MIN_VALUE, Double.MAX_VALUE, 0.000001);
                JSpinner field = new JSpinner(model);
                this.valueSupplier = () -> Objects.toString(field.getValue());
                return field;
            }
            case Key: {
                JTextField result = new JTextField();
                result.setPreferredSize(new Dimension(50, getPreferredSize().height));
                result.setEditable(false);
                
                JLabel label = new JLabel();
                label.setPreferredSize(new Dimension(100, getPreferredSize().height));
                
                JButton field = new JButton("...");
                field.addActionListener(new ActionListener() {
                    @Override
                    public void actionPerformed(ActionEvent e) {
                        KeySelectorFrame frame = new KeySelectorFrame(db, spec.foreignTable, spec.foreignKey, spec.foreignName);
                        frame.setVisible(true);
                        if (frame.isConfirmed()) {
                            String key = Objects.toString(frame.getSelectedKey());
                            String name = Objects.toString(frame.getSelectedName());
                            System.out.println(String.format("Selected key %s (%s)", key, name));
                            result.setText(key);
                            label.setText(name);
                        }
                    }
                });
                JPanel panel = new JPanel();
                BorderLayout layout = new BorderLayout();
                panel.setLayout(layout);
                panel.add(result, BorderLayout.WEST);
                panel.add(label, BorderLayout.CENTER);
                panel.add(field, BorderLayout.EAST);
                this.valueSupplier = () -> result.getText().isEmpty() ? null : result.getText();
                return panel;
            }
        }
        throw new IllegalStateException("oops");
    }
    
    public String getValue() {
        return spec.formatValue(valueSupplier.get());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        nameLabel = new javax.swing.JLabel();
        inputContainer = new javax.swing.JPanel();
        jTextField1 = new javax.swing.JTextField();

        setMaximumSize(new java.awt.Dimension(32767, 36));
        setMinimumSize(new java.awt.Dimension(202, 36));

        nameLabel.setText("ColumnName");

        inputContainer.setLayout(new java.awt.BorderLayout());

        jTextField1.setText("jTextField1");
        jTextField1.setMaximumSize(new java.awt.Dimension(2147483647, 20));
        jTextField1.setMinimumSize(new java.awt.Dimension(59, 20));
        inputContainer.add(jTextField1, java.awt.BorderLayout.CENTER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(nameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(inputContainer, javax.swing.GroupLayout.DEFAULT_SIZE, 86, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(nameLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(inputContainer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel inputContainer;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JLabel nameLabel;
    // End of variables declaration//GEN-END:variables
}
